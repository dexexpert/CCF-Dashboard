{"version":3,"sources":["views/app-views/spot/holdings/index.js"],"names":["axios","require","chartURL","dataSource","Holdings","props","useState","marketingData","setMarketingData","needRenderAgain","setRenderAgain","renderPriceChangeFunction","text","record","style","color","Number","columns","title","dataIndex","key","render","className","alt","name","src","iconURL","marginRight","width","height","coinId","getMarketingData","get","params","ids","vs_currency","include_market_cap","per_page","page","sparkline","price_change_percentage","order","then","res","console","log","data","catch","err","useEffect","setInterval","undefined","ind","map","coinData","rowData","id","symbol","toUpperCase","price","current_price","image","change_1","price_change_percentage_1h_in_currency","toFixed","change_24","price_change_percentage_24h_in_currency","change_7d","price_change_percentage_7d_in_currency","volume_24","total_volume","toLocaleString","marketCap","market_cap","length"],"mappings":"+IAGIA,EAAQC,EAAQ,KAGdC,EAAW,CACf,WAAY,iDACZ,cAAe,iDACf,gBAAiB,kDACjB,UAAW,kDACX,MAAS,kDACT,mBAAoB,mDAGlBC,EAAa,GA2JFC,UAxJE,SAACC,GAChB,MAA0CC,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA0CF,oBAAS,GAAnD,mBAAOG,EAAP,KAAwBC,EAAxB,KAEMC,EAA4B,SAACC,EAAMC,GACvC,OACE,sBAAKC,MAAO,CACVC,MAAOC,OAAOJ,GAAQ,EAAI,UAAY,WADxC,UAGGA,EAHH,IAGU,IAHV,SAQEK,EAAU,CACd,CACEC,MAAO,OACPC,UAAW,OACXC,IAAK,OACLC,OAAQ,SAACT,EAAMC,GACb,OACE,qCACE,qBAAKS,UAAU,GAAGC,IAAKV,EAAOW,KAAMC,IAAKZ,EAAOa,QAASZ,MAAO,CAC9Da,YAAa,OACbC,MAAO,OACPC,OAAQ,UAETjB,OAIT,CACEM,MAAO,SACPC,UAAW,SACXC,IAAK,UAEP,CACEF,MAAO,QACPC,UAAW,QACXC,IAAK,SAEP,CACEF,MAAO,KACPC,UAAW,WACXC,IAAK,WACLC,OAAQV,GAEV,CACEO,MAAO,MACPC,UAAW,YACXC,IAAK,YACLC,OAAQV,GAEV,CACEO,MAAO,KACPC,UAAW,YACXC,IAAK,YACLC,OAAQV,GAEV,CACEO,MAAO,aACPC,UAAW,YACXC,IAAK,aAEP,CACEF,MAAO,UACPC,UAAW,YACXC,IAAK,aAEP,CACEF,MAAO,cACPC,UAAW,YACXC,IAAK,YACLC,OAAQ,SAACT,EAAMC,GACb,OAAO,qBAAKS,UAAU,GAAGC,IAAKV,EAAOW,KAAMC,IAAKvB,EAASW,EAAOiB,QAAShB,MAAO,QAMhFiB,EAAmB,WACvB/B,EAAMgC,IAAI,iEAAkE,CAC1EC,OAAQ,CACNC,IAAK,oEACLC,YAAa,MACbC,mBAAoB,OACpBC,SAAU,MACVC,KAAM,IACNC,UAAW,OACXC,wBAAyB,YACzBC,MAAO,YAGRC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAIG,MAChBtC,EAAiBmC,EAAIG,SAEtBC,OAAM,SAAAC,GAAG,OAAIJ,QAAQC,IAAIG,OAgD9B,OA7CAC,qBAAU,WACRlB,IACAmB,aAAY,WACVnB,MACC,OACF,IAEHkB,qBAAU,WACR,QAAsBE,IAAlB5C,GAAiD,OAAlBA,EAAnC,CAEA,IAAI6C,EAAM,EACVjD,EAAaI,EAAc8C,KAAI,SAAAC,GAC7B,QAAiBH,IAAbG,EAAwB,CAQ1B,IAAMC,EAAU,CACdnC,IAAKgC,EACLtB,OAAQwB,EAASE,GACjBhC,KAAM8B,EAAS9B,KACfiC,OAAQH,EAASG,OAAOC,cACxBC,MAAO,IAAML,EAASM,cACtBlC,QAAS4B,EAASO,MAClBC,SAAUR,EAASS,uCAAuCC,QAAQ,GAClEC,UAAWX,EAASY,wCAAwCF,QAAQ,GACpEG,UAAWb,EAASc,uCAAuCJ,QAAQ,GACnEK,UAAW,IAAMf,EAASgB,aAAaC,iBACvCC,UAAW,IAAMlB,EAASmB,WAAWF,iBACrChC,UAAWe,EAASf,WAGtB,OADAa,IACOG,EAETH,OAEFR,QAAQC,IAAI1C,GACZyC,QAAQC,IAAI1C,EAAWuE,QAEvBhE,GAAgBD,MACf,CAACF,IAGF,mCACE,cAAC,IAAD,CAAOJ,WAAYA,EAAYc,QAASA","file":"static/js/43.ecf4caa0.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Table } from 'antd';\r\n\r\nvar axios = require('axios');\r\n\r\nconst namesOfCoins = [\"fetch-ai\", \"lto-network\", \"oasis-network\", \"ime-lab\", \"qredo\", \"numbers-protocol\"];\r\nconst chartURL = {\r\n  \"fetch-ai\": \"https://www.coingecko.com/coins/5681/sparkline\",\r\n  \"lto-network\": \"https://www.coingecko.com/coins/6068/sparkline\",\r\n  \"oasis-network\": \"https://www.coingecko.com/coins/13162/sparkline\",\r\n  \"ime-lab\": \"https://www.coingecko.com/coins/16243/sparkline\",\r\n  \"qredo\": \"https://www.coingecko.com/coins/17541/sparkline\",\r\n  \"numbers-protocol\": \"https://www.coingecko.com/coins/20495/sparkline\",\r\n}\r\n\r\nvar dataSource = [\r\n];\r\n\r\nconst Holdings = (props) => {\r\n  const [marketingData, setMarketingData] = useState([]);\r\n  const [needRenderAgain, setRenderAgain] = useState(true);\r\n\r\n  const renderPriceChangeFunction = (text, record) => {\r\n    return (\r\n      <div style={{\r\n        color: Number(text) < 0 ? \"#e15241\" : \"#4eaf0a\"\r\n      }}>\r\n        {text} {\" \"} %\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      render: (text, record) => {\r\n        return (\r\n          <>\r\n            <img className=\"\" alt={record.name} src={record.iconURL} style={{\r\n              marginRight: \"10px\",\r\n              width: \"20px\",\r\n              height: \"20px\"\r\n            }}></img>\r\n            {text}\r\n          </>);\r\n      }\r\n    },\r\n    {\r\n      title: 'Symbol',\r\n      dataIndex: 'symbol',\r\n      key: 'symbol',\r\n    },\r\n    {\r\n      title: 'Price',\r\n      dataIndex: 'price',\r\n      key: 'price',\r\n    },\r\n    {\r\n      title: '1h',\r\n      dataIndex: 'change_1',\r\n      key: 'change_1',\r\n      render: renderPriceChangeFunction\r\n    },\r\n    {\r\n      title: '24h',\r\n      dataIndex: 'change_24',\r\n      key: 'change_24',\r\n      render: renderPriceChangeFunction\r\n    },\r\n    {\r\n      title: '7d',\r\n      dataIndex: 'change_7d',\r\n      key: 'change_7d',\r\n      render: renderPriceChangeFunction\r\n    },\r\n    {\r\n      title: '24h Volume',\r\n      dataIndex: 'volume_24',\r\n      key: 'volume_24'\r\n    },\r\n    {\r\n      title: 'Mkt Cap',\r\n      dataIndex: 'marketCap',\r\n      key: 'marketCap'\r\n    },\r\n    {\r\n      title: 'Last 7 Days',\r\n      dataIndex: 'sparkline',\r\n      key: 'sparkline',\r\n      render: (text, record) => {\r\n        return <img className=\"\" alt={record.name} src={chartURL[record.coinId]} style={{\r\n        }}></img>\r\n      }\r\n    }\r\n  ];\r\n\r\n  const getMarketingData = () => {\r\n    axios.get(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd\", {\r\n      params: {\r\n        ids: \"fetch-ai,lto-network,oasis-network,ime-lab,qredo,numbers-protocol\",\r\n        vs_currency: \"usd\",\r\n        include_market_cap: \"true\",\r\n        per_page: \"250\",\r\n        page: \"1\",\r\n        sparkline: \"true\",\r\n        price_change_percentage: \"1h,24h,7d\",\r\n        order: \"id_asc\"\r\n      }\r\n    })\r\n      .then(res => {\r\n        console.log(res.data);\r\n        setMarketingData(res.data);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  useEffect(() => {\r\n    getMarketingData();\r\n    setInterval(() => {\r\n      getMarketingData();\r\n    }, 1000 * 30);\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (marketingData === undefined || marketingData === null)\r\n      return;\r\n    let ind = 1;\r\n    dataSource = marketingData.map(coinData => {\r\n      if (coinData !== undefined) {\r\n        /*\r\n        key: '1',\r\n    name: 'Fetch.ai',\r\n    symbol: 'FET',\r\n    price: '',\r\n    iconURL: \"https://assets.coingecko.com/coins/images/5681/thumb/Fetch.jpg?1572098136\"\r\n     */\r\n        const rowData = {\r\n          key: ind,\r\n          coinId: coinData.id,\r\n          name: coinData.name,\r\n          symbol: coinData.symbol.toUpperCase(),\r\n          price: '$' + coinData.current_price,\r\n          iconURL: coinData.image,\r\n          change_1: coinData.price_change_percentage_1h_in_currency.toFixed(1),\r\n          change_24: coinData.price_change_percentage_24h_in_currency.toFixed(1),\r\n          change_7d: coinData.price_change_percentage_7d_in_currency.toFixed(1),\r\n          volume_24: '$' + coinData.total_volume.toLocaleString(),\r\n          marketCap: '$' + coinData.market_cap.toLocaleString(),\r\n          sparkline: coinData.sparkline\r\n        }\r\n        ind++;\r\n        return rowData;\r\n      }\r\n      ind++;\r\n    });\r\n    console.log(dataSource);\r\n    console.log(dataSource.length);\r\n\r\n    setRenderAgain(!needRenderAgain);\r\n  }, [marketingData]);\r\n\r\n  return (\r\n    <>\r\n      <Table dataSource={dataSource} columns={columns} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Holdings;\r\n"],"sourceRoot":""}